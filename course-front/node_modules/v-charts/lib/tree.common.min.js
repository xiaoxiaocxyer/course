"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var utilsLite=require("utils-lite");require("echarts/lib/chart/tree");var Core=_interopDefault(require('./core')),_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i])}return e};function getTreeLegend(e){var t=e.dimension;return{data:e.rows.map(function(e){return e[t]})}}function getTreeTooltip(e){return{trigger:"item",triggerOn:"mousemove",formatter:e.tooltipFormatter}}function getTreeSeries(e){var t=e.dimension,r=e.metrics,i=e.rows,n=e.seriesMap,o=[];return i.forEach(function(e){var i=e[t],s=n[i],a={type:"tree",name:e[t],data:e[r]};n[e[t]]&&Object.keys(s).forEach(function(e){utilsLite.isObject(a[e])?_extends(a[e],s[e]):a[e]=s[e]}),o.push(a)}),o}var tree$1=function(e,t,r,i){var n=r.dimension,o=void 0===n?e[0]:n,s=r.metrics,a=void 0===s?e[1]:s,u=r.seriesMap,c=void 0===u?{}:u,l=i.legendVisible,d=i.tooltipFormatter,f=i.tooltipVisible;return{series:getTreeSeries({dimension:o,metrics:a,rows:t,seriesMap:c}),legend:l&&t.length>1&&getTreeLegend({dimension:o,rows:t}),tooltip:f&&getTreeTooltip({tooltipFormatter:d})}},index=_extends({},Core,{name:"VeTree",data:function(){return this.chartHandler=tree$1,{}}});module.exports=index;
